version: "3.8"

services:

  postgres:
    container_name: postgres_container
    image: "postgres"
    hostname: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres_123456"
      POSTGRES_DB: mdp_services_development
      PGDATA: "/data/postgres"
    volumes:
      - postgres:/data/postgres
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    ports:
      - '5432:5432'
    networks:
      - mdp-services
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin_123456_admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/root/.pgadmin
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - 5050:80
    networks:
      - mdp-services
    restart: unless-stopped

  redis-server:
    image: redis
    container_name: redis-cache
    hostname: redis-server
    networks:
      - mdp-services
    ports:
      - 6379:6379

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    hostname: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq:/data/rabbitmq
    networks:
        - mdp-services
        
  app:
    image: ertugrulsagdic/mdp-services-app
    container_name: mdp-services-app
    environment:
      NODE_ENV: docker
    stdin_open: true
    command: /bin/sh -c "cd api/src&&npx sequelize db:migrate&&cd ..&&cd .. && npm start"
    depends_on:
      - postgres
      - redis-server
    networks:
      - mdp-services
    links:
      - redis-server
    ports:
      - 8000:8000

networks:
  mdp-services:
    driver: bridge

volumes:
    postgres:
    pgadmin:
    rabbitmq: